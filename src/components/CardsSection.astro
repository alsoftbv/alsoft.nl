---
import { Image } from "astro:assets";
import type { CardItem } from "../data/card-item";

interface Props {
  title: string;
  page: string;
  items: CardItem[];
}

const { title, page, items } = Astro.props as Props;
---

<section class="card-slider-section">
  <h2>{title}</h2>
  <div class="slider-wrapper">
    <button class="scroll-btn left" aria-label="Scroll left">←</button>
    <div class="card-slider">
      {
        items.map((item: CardItem) => {
          const anchor = item.id;
          return (
            <a href={`/${page}#${anchor}`}>
              <div class="card-item">
                <Image src={item.image} alt={item.title} />
                <h3>{item.title}</h3>
                <p>{item.description}</p>
              </div>
            </a>
          );
        })
      }
    </div>
    <button class="scroll-btn right" aria-label="Scroll right">→</button>
  </div>
</section>

<style>
  a {
    height: 100%;
    text-decoration: none;
    flex-shrink: 0;
    display: flex;
  }

  .card-slider-section h2 {
    text-align: center;
    margin-bottom: 1.5rem;
  }

  .slider-wrapper {
    display: flex;
    justify-content: center;
    position: relative;
    padding: 0 1rem;
  }

  .scroll-btn {
    background-color: rgba(0, 0, 0, 0.6);
    color: white;
    border: none;
    font-size: 2rem;
    border-radius: 50%;
    width: 2.5rem;
    height: 2.5rem;
    cursor: pointer;
    transition: background-color 0.2s;
    position: absolute;
    top: 50%;
    z-index: 10;
    text-align: center;

    display: flex;
    align-items: center;
    justify-content: center;
    line-height: 1;
    padding: 0;
  }

  .scroll-btn.left {
    left: 0.25rem;
  }

  .scroll-btn:hover {
    background-color: rgba(255, 255, 255, 0.2);
  }

  .scroll-btn.right {
    right: 0.25rem;
  }

  .card-slider {
    display: flex;
    gap: 1.5rem;
    overflow-x: auto;
    scroll-behavior: smooth;
    padding: 1rem;
    width: 100%;
    scrollbar-width: none;
    justify-content: flex-start;
    mask: linear-gradient(
      to right,
      transparent,
      black 7%,
      black 93%,
      transparent
    );
  }

  .card-item {
    width: 300px;
    background-color: #202020;
    border-radius: 1rem;
    padding: 2rem 1rem;
    transition:
      box-shadow 0.2s,
      transform 0.2s;
    display: grid;
    grid-template-rows: 50% 20% 30%;
    flex-direction: column;
    align-items: center;
    text-align: center;
    overflow: hidden;
  }

  .card-item:hover {
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    transform: translateY(-5px);
    cursor: pointer;
  }

  .card-item img {
    width: 90%;
    aspect-ratio: 16 / 9;
    max-height: 180px;
    object-fit: cover;
    border-radius: 0.5rem;
    margin: 0.5rem 0;
    align-self: center;
    justify-self: center;
  }

  .card-item h3 {
    font-size: 1.15rem;
    font-weight: 700;
    align-self: start;
    justify-self: center;
  }

  .card-item p {
    margin: 0;
    align-self: start;
    justify-self: center;
  }

  @media (max-width: 768px) {
    .card-item {
      width: 220px;
    }

    .scroll-btn {
      display: none;
    }

    .card-slider {
      mask: linear-gradient(
        to right,
        transparent,
        black 10%,
        black 90%,
        transparent
      );
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const sliders = document.querySelectorAll(".card-slider-section");
    sliders.forEach((section) => {
      const slider = section.querySelector(".card-slider");
      const leftBtn = section.querySelector(".scroll-btn.left");
      const rightBtn = section.querySelector(".scroll-btn.right");

      const scrollAmount = 300;

      leftBtn?.addEventListener("click", () => {
        slider?.scrollBy({ left: -scrollAmount, behavior: "smooth" });
      });

      rightBtn?.addEventListener("click", () => {
        slider?.scrollBy({ left: scrollAmount, behavior: "smooth" });
      });
    });
  });
</script>
